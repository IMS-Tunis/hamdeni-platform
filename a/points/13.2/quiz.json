{
  "questions": [
    {
      "type": "mcq",
      "question": "Which description best defines Serial File Organization?",
      "options": [
        "Records are stored one after another in the order they are added, typically in chronological order; new records are appended at the end",
        "Records are stored in a defined order by a key field or an index derived from a key; new records are inserted to preserve the order",
        "Records are stored at addresses computed from a key using a hashing algorithm, enabling rapid direct retrieval",
        "Read and write operations proceed in the order of the key or index"
      ],
      "answer": "Records are stored one after another in the order they are added, typically in chronological order; new records are appended at the end"
    },
    {
      "type": "mcq",
      "question": "Which statement is a key characteristic of Sequential File Organization?",
      "options": [
        "New records are appended to the end of the file",
        "Searching can terminate early when the current record’s key exceeds the target key",
        "Records are stored at addresses computed from a key using a hashing algorithm",
        "Records are stored one after another in chronological order"
      ],
      "answer": "Searching can terminate early when the current record’s key exceeds the target key"
    },
    {
      "type": "match",
      "question": "Match each file organization to its defining property.",
      "pairs": {
        "Serial": "Records stored one after another in chronological order",
        "Sequential": "Records stored in a defined order by a key field or index",
        "Random or Direct": "Records stored at addresses computed from a key using a hashing algorithm"
      }
    },
    {
      "type": "match",
      "question": "Match each file organization to a suitable application.",
      "pairs": {
        "Serial": "Sequential processing such as transaction logs or batch runs",
        "Sequential": "Processing in key order such as billing cycles or sorted reports",
        "Random or Direct": "Fast access to individual records such as customer databases with frequent updates"
      }
    },
    {
      "type": "mcq",
      "question": "Which statement characterizes Sequential Access?",
      "options": [
        "Records are read one by one from the physical start until the target is found or end of file is reached",
        "A specific record is accessed by computing or referencing its unique storage address",
        "Appropriate when rapid updates or retrievals of individual records are required",
        "Typically used with random files"
      ],
      "answer": "Records are read one by one from the physical start until the target is found or end of file is reached"
    },
    {
      "type": "match",
      "question": "Match each task to the appropriate access method.",
      "pairs": {
        "End-of-month full-file processing": "Sequential access",
        "Updating a customer’s details": "Direct access",
        "Reading until the target or end of file": "Sequential access"
      }
    },
    {
      "type": "mcq",
      "question": "An index file stores pairs such as customer number and byte position. How is the record retrieved?",
      "options": [
        "Scan all records from the physical start",
        "Insert the new record chronologically and rescan",
        "Look up the key in the index and jump directly to that byte position",
        "Recompute all keys using a different modulus"
      ],
      "answer": "Look up the key in the index and jump directly to that byte position"
    },
    {
      "type": "mcq",
      "question": "What does a hashing algorithm do in file access?",
      "options": [
        "Applies a mathematical function to a record’s key to compute its storage address for direct access",
        "Sorts records in order of a key field or index",
        "Stores records one after another in the order they are added",
        "Reads records one by one from the physical start until the target is found"
      ],
      "answer": "Applies a mathematical function to a record’s key to compute its storage address for direct access"
    },
    {
      "type": "fill_blank",
      "question": "A _____ occurs when different keys produce the same hash address and map to the same location.",
      "answer": "collision"
    },
    {
      "type": "match",
      "question": "Match each collision handling method to its description.",
      "pairs": {
        "Linear probing": "Advance from the original address to the next available free slot",
        "Chaining": "Maintain a collection linked from the address so colliding items are traversed via links"
      }
    }
  ]
}