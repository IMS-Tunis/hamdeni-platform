{
  "questions": [
    {
      "type": "mcq",
      "question": "Why define a user-defined data type?",
      "options": [
        "To reuse built-in operators without change",
        "To match the program’s specific data and constraints exactly",
        "To avoid declaring variables altogether",
        "To make the code run faster by default"
      ],
      "answer": "To match the program’s specific data and constraints exactly"
    },
    {
      "type": "match",
      "question": "Match each term to its description.",
      "pairs": {
        "user-defined data type": "Created by the programmer so data matches program requirements exactly",
        "type definition": "Creates a name that can be used later in declarations",
        "composite type": "Defined with reference to at least one other type",
        "non-composite type": "Defined without reference to any other type"
      }
    },
    {
      "type": "match",
      "question": "Match each concept to the description.",
      "pairs": {
        "enumerated type": "Listing all possible values for the type",
        "pointer type": "Stores the location (address) where a value lives in memory",
      }
    },
    {
      "type": "match",
      "question": "Match the composite type to its defining feature.",
      "pairs": {
        "record": "Fields can be of different data types",
        "class": "Groups properties and methods for objects",
        "set": "Unordered collection with unique elements"
      }
    },
    {
      "type": "match",
      "question": "Match each set operation to its result.",
      "pairs": {
        "union": "Combines two sets into one containing every element that appears in either set (no duplicates)",
        "intersection": "Keeps only the elements present in both sets"
      }
    },
    {
      "type": "match",
      "question": "Match the user-defined type to the scenario where it is the best choice.",
      "pairs": {
        "Record": "You need several labelled pieces of information together, like for a flight.",
        "Class": "You will create many similar items that have associated actions.",
        "Set": "You need to perform unique membership checks.",
        "Pointer": "You need to store the memory locations of values.",
        "Enumerated type": "All valid values form a fixed list known in advance."
      }
    }
  ]
}