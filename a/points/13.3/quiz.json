{
  "questions": [
    {
      "id": 1,
      "section": "13.3a",
      "type": "mcq",
      "question": "Which pairing best describes the roles of the two floating-point fields in this syllabus?",
      "options": [
        "Mantissa stores the scale, exponent stores the digits",
        "Mantissa stores the significant digits, exponent stores the scale factor",
        "Mantissa stores the sign only, exponent stores magnitude and digits",
        "Both mantissa and exponent store only signs"
      ],
      "answer": "Mantissa stores the significant digits, exponent stores the scale factor"
    {
      "id": 2,
      "section": "13.3a",
      "type": "mcq",
      "question": "Which statement correctly contrasts precision and range?",
      "options": [
        "More mantissa bits increase range, more exponent bits increase precision",
        "More mantissa bits increase precision, more exponent bits increase range",
        "More bits in either field increase both precision and range equally",
        "Precision and range are unaffected by bit allocation"
      ],
      "answer": "More mantissa bits increase precision, more exponent bits increase range"
    },
    {
      "id": 5,
      "section": "13.3a",
      "type": "match",
      "question": "Match each item to its effect.",
      "pairs": {
        "Increase mantissa field length": "Higher precision",
        "Increase exponent field length": "Larger representable range",
        "Mantissa is read as": "Signed fixed-point fraction",
        "Exponent sign bit equals 1": "Negative exponent"
      }
    },
    {
      "id": 7,
      "section": "13.3b",
      "type": "fill_blank",
      "question": "Shifting the digits to achieve the target leading pattern for the mantissa is called _____.",
      "answer": "normalisation"
    },
    {
      "id": 10,
      "section": "13.3b",
      "type": "mcq",
      "question": "Why does the normalisation shift count become the stored exponent?",
      "options": [
        "It preserves the location of the internal binary point in the mantissa",
        "It records how far the point was moved so the original value can be recovered by scaling",
        "It measures rounding error for later correction",
        "It indicates whether the mantissa is positive or negative"
      ],
      "answer": "It records how far the point was moved so the original value can be recovered by scaling"
    },
    {
      "id": 11,
      "section": "13.3c",
      "type": "mcq",
      "question": "What is the purpose of normalisation?",
      "options": [
        "To change the numerical value",
        "To shift the mantissa to a standard leading pattern and adjust the exponent so the overall value is unchanged",
        "To zero the exponent so the mantissa holds the full value",
        "To remove the sign information from the mantissa"
      ],
      "answer": "To shift the mantissa to a standard leading pattern and adjust the exponent so the overall value is unchanged"
    },
    {
      "id": 12,
      "section": "13.3c",
      "type": "true_false",
      "question": "For a negative stored mantissa in two’s complement, the target leading pattern has a set sign bit followed immediately by a zero bit.",
      "answer": "True"
    },
    {
      "id": 13,
      "section": "13.3c",
      "type": "match",
      "question": "Match the mantissa shift to the required exponent adjustment to keep the value unchanged.",
      "pairs": {
        "Shift mantissa left by k": "Decrease exponent by k",
        "Shift mantissa right by k": "Increase exponent by k"
      }
    },
    {
      "id": 14,
      "section": "13.3c",
      "type": "mcq",
      "question": "When you make a normalised positive mantissa negative for storage, which quantity must remain unchanged?",
      "options": [
        "Sign bit of the mantissa",
        "Field width of the mantissa",
        "Exponent",
        "Target leading pattern for positives"
      ],
      "answer": "Exponent"
    },
    {
      "id": 15,
      "section": "13.3d",
      "type": "mcq",
      "question": "What causes approximation in this format?",
      "options": [
        "Exponent field is too wide",
        "Many denary fractions do not terminate in binary, so a fixed-length mantissa must round",
        "Two’s complement cannot represent negative values",
        "Normalisation removes significant digits by design"
      ],
      "answer": "Many denary fractions do not terminate in binary, so a fixed-length mantissa must round"
    },
	    {
      "id": 17,
      "section": "13.3d",
      "type": "match",
      "question": "Match each situation to the concept.",
      "pairs": {
        "Needed exponent more positive than allowed": "Overflow",
        "Needed exponent more negative than allowed": "Underflow",
        "Needs more significant binary digits than the mantissa field provides": "Precision limit"
      }
    },
    {
      "id": 16,
      "section": "13.3d",
      "type": "mcq",
      "question": "How underflow is handled?",
      "options": [
        "The value wraps to the largest magnitude",
        "The value becomes zero or a very tiny denormal value depending on the system",
        "The sign is flipped and the magnitude retained",
        "The mantissa is widened automatically"
      ],
      "answer": "The value becomes zero or a very tiny denormal value depending on the system"
    },

    {
      "id": 18,
      "section": "13.3e",
      "type": "mcq",
      "question": "What happens when the normalised mantissa requires more bits than the mantissa field allows?",
      "options": [
        "Extra most-significant bits are dropped, increasing magnitude",
        "Extra least-significant bits are discarded or rounded according to a rule, storing the nearest representable value",
        "Exponent is automatically reduced to fit the mantissa",
        "The value is stored exactly using the exponent field"
      ],
      "answer": "Extra least-significant bits are discarded or rounded according to a rule, storing the nearest representable value"
    },
    {
      "id": 19,
      "section": "13.3e",
      "type": "mcq",
      "question": "Which statement correctly relates bit allocation to effects on values?",
      "options": [
        "More exponent bits reduce rounding error near any particular value",
        "More mantissa bits shrink the spacing between representable fractions, bringing the stored value closer to the ideal",
        "More mantissa bits expand the exponent range, improving overflow limits",
        "Bit allocation does not affect either rounding error or range"
      ],
      "answer": "More mantissa bits shrink the spacing between representable fractions, bringing the stored value closer to the ideal"
    }
  ]
}