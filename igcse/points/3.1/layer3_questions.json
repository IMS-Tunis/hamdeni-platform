[
  {
    "point_id": "3.1a",
    "question_number": 1,
    "question": "Define the term central processing unit (CPU).",
    "mark_scheme": "(Define: give precise meaning)\nThe central processing unit (CPU) is a component in a computer system that processes data and instructions."
  },
  {
    "point_id": "3.1a",
    "question_number": 2,
    "question": "State two examples of devices that use a microprocessor.",
    "mark_scheme": "(State: express in clear terms)\n1. Washing machines\n2. Traffic lights"
  },
  {
    "point_id": "3.1b",
    "question_number": 3,
    "question": "Describe the three main components of the CPU and their roles.",
    "mark_scheme": "(Describe: state the points of a topic / give characteristics and main features)\n1. Control Unit (CU): Controls and coordinates all operations in the CPU.\n2. Arithmetic Logic Unit (ALU): Performs arithmetic and logical operations.\n3. Registers: Temporarily store data and instructions being processed."
  },
  {
    "point_id": "3.1b",
    "question_number": 4,
    "question": "Describe the Von Neumann architecture and explain the function of the Program Counter (PC).",
    "mark_scheme": "(Describe: state the points of a topic / give characteristics and main features)\nThe Von Neumann architecture is a design model where data and instructions are stored in memory. The CPU executes programs using the fetch-decode-execute cycle.\nThe Program Counter (PC) stores the address of the next instruction to be processed."
  },
  {
    "point_id": "3.1b",
    "question_number": 5,
    "question": "Describe the roles of the address bus, data bus, and control bus in the CPU.",
    "mark_scheme": "(Describe: state the points of a topic / give characteristics and main features)\n- Address bus: Carries memory addresses from the CPU to RAM (unidirectional).\n- Data bus: Transfers data between CPU and memory (bidirectional).\n- Control bus: Sends control signals between CPU and components."
  },
  {
    "point_id": "3.1b",
    "question_number": 6,
    "question": "Outline the steps in the fetch stage of the fetch-decode-execute cycle, including the role of the CIR.",
    "mark_scheme": "(Outline: set out main points)\n1. The PC sends the address of the next instruction to the MAR.\n2. The instruction at that address is copied from memory to the MDR.\n3. The instruction is transferred from MDR to the CIR.\n4. The PC increments by 1.\nThe CIR holds the current instruction being decoded and executed."
  },
  {
    "point_id": "3.1b",
    "question_number": 7,
    "question": "Explain the roles of key CPU registers: ACC, MAR, MDR, CIR.",
    "mark_scheme": "(Explain: set out purposes or reasons / make the relationships between things evident / provide why and/or how and support with relevant evidence)\n- ACC: Stores the result of calculations from the ALU.\n- MAR: Holds the memory address of data or instructions to be fetched.\n- MDR: Holds data being transferred to/from memory.\n- CIR: Stores the current instruction to be executed."
  },
  {
    "point_id": "3.1c",
    "question_number": 8,
    "question": "Explain how clock speed affects CPU performance, including the function of the system clock.",
    "mark_scheme": "(Explain: set out purposes or reasons / make the relationships between things evident)\nThe system clock generates a regular signal to synchronise CPU operations.\nHigher clock speed increases the number of fetch-decode-execute cycles per second, allowing more instructions to be processed in a given time."
  },
  {
    "point_id": "3.1c",
    "question_number": 9,
    "question": "Explain the purpose of cache memory in improving CPU performance.",
    "mark_scheme": "(Explain: set out purposes or reasons / make the relationships between things evident)\nCache stores frequently used instructions/data within the CPU. Accessing cache is faster than accessing RAM, which reduces fetch time and speeds up processing."
  },
  {
    "point_id": "3.1c",
    "question_number": 10,
    "question": "Explain how multiple cores affect instruction execution, and why performance gain is not always proportional.",
    "mark_scheme": "(Explain: set out purposes or reasons / make the relationships between things evident)\nMultiple cores allow instructions to be processed in parallel, improving performance.\nHowever, performance gain is limited by coordination overhead and tasks that cannot be parallelised."
  },
  {
    "point_id": "3.1c",
    "question_number": 11,
    "question": "Explain why overclocking a CPU may cause problems.",
    "mark_scheme": "(Explain: set out purposes or reasons / make the relationships between things evident)\nOverclocking increases clock speed beyond the manufacturer's rating. This may overheat the CPU, increase power consumption, and reduce stability."
  },
  {
    "point_id": "3.1d",
    "question_number": 12,
    "question": "Define an instruction set and describe the roles of opcode and operand in machine code.",
    "mark_scheme": "(Define: give precise meaning)\nAn instruction set is a list of all machine code commands the CPU can execute.\n- Opcode: The part of an instruction that specifies the operation.\n- Operand: The data or address on which the operation is performed."
  },
  {
    "point_id": "3.1e",
    "question_number": 13,
    "question": "Define an embedded system and explain how it differs from a general-purpose computer.",
    "mark_scheme": "(Define: give precise meaning)\nAn embedded system is a computer system built into a larger device to perform a dedicated function.\nUnlike general-purpose computers that can run various programs, embedded systems are limited to specific tasks."
  },
  {
    "point_id": "3.1e",
    "question_number": 14,
    "question": "Give two examples of embedded systems, stating one input and one output for each.",
    "mark_scheme": "(Give: produce an answer from a given source or recall/memory)\n1. Car engine control system\n\u2003Input: Oxygen sensor\u2003\u2003Output: Fuel injector control\n2. Security alarm\n\u2003Input: Motion sensor\u2003\u2003Output: Alarm siren"
  },
  {
    "point_id": "3.1e",
    "question_number": 15,
    "question": "Explain how sensors and outputs are used in an embedded system.",
    "mark_scheme": "(Explain: set out purposes or reasons / make the relationships between things evident)\nSensors collect data from the environment, such as temperature or motion. The microprocessor processes this data and triggers an output device (e.g. motor, buzzer) based on pre-programmed instructions."
  }
]